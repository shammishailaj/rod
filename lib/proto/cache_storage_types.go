// This file is generated by "./lib/proto/cmd/gen"

package proto

// CacheStorageCacheID Unique identifier of the Cache object.
type CacheStorageCacheID string

// CacheStorageCachedResponseType type of HTTP response cached
type CacheStorageCachedResponseType string

const (
	// CacheStorageCachedResponseTypeBasic enum value
	CacheStorageCachedResponseTypeBasic CacheStorageCachedResponseType = "basic"

	// CacheStorageCachedResponseTypeCors enum value
	CacheStorageCachedResponseTypeCors CacheStorageCachedResponseType = "cors"

	// CacheStorageCachedResponseTypeDefault enum value
	CacheStorageCachedResponseTypeDefault CacheStorageCachedResponseType = "default"

	// CacheStorageCachedResponseTypeError enum value
	CacheStorageCachedResponseTypeError CacheStorageCachedResponseType = "error"

	// CacheStorageCachedResponseTypeOpaqueResponse enum value
	CacheStorageCachedResponseTypeOpaqueResponse CacheStorageCachedResponseType = "opaqueResponse"

	// CacheStorageCachedResponseTypeOpaqueRedirect enum value
	CacheStorageCachedResponseTypeOpaqueRedirect CacheStorageCachedResponseType = "opaqueRedirect"
)

// CacheStorageDataEntry Data entry.
type CacheStorageDataEntry struct {
	// RequestURL Request URL.
	RequestURL string `json:"requestURL"`

	// RequestMethod Request method.
	RequestMethod string `json:"requestMethod"`

	// RequestHeaders Request headers
	RequestHeaders []*CacheStorageHeader `json:"requestHeaders"`

	// ResponseTime Number of seconds since epoch.
	ResponseTime float64 `json:"responseTime"`

	// ResponseStatus HTTP response status code.
	ResponseStatus int64 `json:"responseStatus"`

	// ResponseStatusText HTTP response status text.
	ResponseStatusText string `json:"responseStatusText"`

	// ResponseType HTTP response type
	ResponseType *CacheStorageCachedResponseType `json:"responseType"`

	// ResponseHeaders Response headers
	ResponseHeaders []*CacheStorageHeader `json:"responseHeaders"`
}

// CacheStorageCache Cache identifier.
type CacheStorageCache struct {
	// CacheID An opaque unique id of the cache.
	CacheID *CacheStorageCacheID `json:"cacheId"`

	// SecurityOrigin Security origin of the cache.
	SecurityOrigin string `json:"securityOrigin"`

	// CacheName The name of the cache.
	CacheName string `json:"cacheName"`
}

// CacheStorageHeader ...
type CacheStorageHeader struct {
	// Name ...
	Name string `json:"name"`

	// Value ...
	Value string `json:"value"`
}

// CacheStorageCachedResponse Cached response
type CacheStorageCachedResponse struct {
	// Body Entry content, base64-encoded.
	Body []byte `json:"body"`
}
