// This file is generated by "./lib/proto/cmd/gen"

package proto

// PageFrameID Unique frame identifier.
type PageFrameID string

// PageFrame Information about the Frame on the page.
type PageFrame struct {
	// ID Frame unique identifier.
	ID *PageFrameID `json:"id"`

	// ParentID Parent frame identifier.
	ParentID string `json:"parentId,omitempty"`

	// LoaderID Identifier of the loader associated with this frame.
	LoaderID *NetworkLoaderID `json:"loaderId"`

	// Name Frame's name as specified in the tag.
	Name string `json:"name,omitempty"`

	// URL Frame document's URL without fragment.
	URL string `json:"url"`

	// URLFragment (experimental) Frame document's URL fragment including the '#'.
	URLFragment string `json:"urlFragment,omitempty"`

	// SecurityOrigin Frame document's security origin.
	SecurityOrigin string `json:"securityOrigin"`

	// MIMEType Frame document's mimeType as determined by the browser.
	MIMEType string `json:"mimeType"`

	// UnreachableURL (experimental) If the frame failed to load, this contains the URL that could not be loaded. Note that unlike url above, this URL may contain a fragment.
	UnreachableURL string `json:"unreachableUrl,omitempty"`
}

// PageFrameResource (experimental) Information about the Resource on the page.
type PageFrameResource struct {
	// URL Resource URL.
	URL string `json:"url"`

	// Type Type of this resource.
	Type *NetworkResourceType `json:"type"`

	// MIMEType Resource mimeType as determined by the browser.
	MIMEType string `json:"mimeType"`

	// LastModified last-modified timestamp as reported by server.
	LastModified *NetworkTimeSinceEpoch `json:"lastModified,omitempty"`

	// ContentSize Resource content size.
	ContentSize float64 `json:"contentSize,omitempty"`

	// Failed True if the resource failed to load.
	Failed bool `json:"failed,omitempty"`

	// Canceled True if the resource was canceled during loading.
	Canceled bool `json:"canceled,omitempty"`
}

// PageFrameResourceTree (experimental) Information about the Frame hierarchy along with their cached resources.
type PageFrameResourceTree struct {
	// Frame Frame information for this tree item.
	Frame *PageFrame `json:"frame"`

	// ChildFrames Child frames.
	ChildFrames []*PageFrameResourceTree `json:"childFrames,omitempty"`

	// Resources Information about frame resources.
	Resources []*PageFrameResource `json:"resources"`
}

// PageFrameTree Information about the Frame hierarchy.
type PageFrameTree struct {
	// Frame Frame information for this tree item.
	Frame *PageFrame `json:"frame"`

	// ChildFrames Child frames.
	ChildFrames []*PageFrameTree `json:"childFrames,omitempty"`
}

// PageScriptIdentifier Unique script identifier.
type PageScriptIdentifier string

// PageTransitionType Transition type.
type PageTransitionType string

const (
	// PageTransitionTypeLink enum value
	PageTransitionTypeLink PageTransitionType = "link"

	// PageTransitionTypeTyped enum value
	PageTransitionTypeTyped PageTransitionType = "typed"

	// PageTransitionTypeAddressBar enum value
	PageTransitionTypeAddressBar PageTransitionType = "address_bar"

	// PageTransitionTypeAutoBookmark enum value
	PageTransitionTypeAutoBookmark PageTransitionType = "auto_bookmark"

	// PageTransitionTypeAutoSubframe enum value
	PageTransitionTypeAutoSubframe PageTransitionType = "auto_subframe"

	// PageTransitionTypeManualSubframe enum value
	PageTransitionTypeManualSubframe PageTransitionType = "manual_subframe"

	// PageTransitionTypeGenerated enum value
	PageTransitionTypeGenerated PageTransitionType = "generated"

	// PageTransitionTypeAutoToplevel enum value
	PageTransitionTypeAutoToplevel PageTransitionType = "auto_toplevel"

	// PageTransitionTypeFormSubmit enum value
	PageTransitionTypeFormSubmit PageTransitionType = "form_submit"

	// PageTransitionTypeReload enum value
	PageTransitionTypeReload PageTransitionType = "reload"

	// PageTransitionTypeKeyword enum value
	PageTransitionTypeKeyword PageTransitionType = "keyword"

	// PageTransitionTypeKeywordGenerated enum value
	PageTransitionTypeKeywordGenerated PageTransitionType = "keyword_generated"

	// PageTransitionTypeOther enum value
	PageTransitionTypeOther PageTransitionType = "other"
)

// PageNavigationEntry Navigation history entry.
type PageNavigationEntry struct {
	// ID Unique id of the navigation history entry.
	ID int64 `json:"id"`

	// URL URL of the navigation history entry.
	URL string `json:"url"`

	// UserTypedURL URL that the user typed in the url bar.
	UserTypedURL string `json:"userTypedURL"`

	// Title Title of the navigation history entry.
	Title string `json:"title"`

	// TransitionType Transition type.
	TransitionType *PageTransitionType `json:"transitionType"`
}

// PageScreencastFrameMetadata (experimental) Screencast frame metadata.
type PageScreencastFrameMetadata struct {
	// OffsetTop Top offset in DIP.
	OffsetTop float64 `json:"offsetTop"`

	// PageScaleFactor Page scale factor.
	PageScaleFactor float64 `json:"pageScaleFactor"`

	// DeviceWidth Device screen width in DIP.
	DeviceWidth float64 `json:"deviceWidth"`

	// DeviceHeight Device screen height in DIP.
	DeviceHeight float64 `json:"deviceHeight"`

	// ScrollOffsetX Position of horizontal scroll in CSS pixels.
	ScrollOffsetX float64 `json:"scrollOffsetX"`

	// ScrollOffsetY Position of vertical scroll in CSS pixels.
	ScrollOffsetY float64 `json:"scrollOffsetY"`

	// Timestamp Frame swap timestamp.
	Timestamp *NetworkTimeSinceEpoch `json:"timestamp,omitempty"`
}

// PageDialogType Javascript dialog type.
type PageDialogType string

const (
	// PageDialogTypeAlert enum value
	PageDialogTypeAlert PageDialogType = "alert"

	// PageDialogTypeConfirm enum value
	PageDialogTypeConfirm PageDialogType = "confirm"

	// PageDialogTypePrompt enum value
	PageDialogTypePrompt PageDialogType = "prompt"

	// PageDialogTypeBeforeunload enum value
	PageDialogTypeBeforeunload PageDialogType = "beforeunload"
)

// PageAppManifestError Error while paring app manifest.
type PageAppManifestError struct {
	// Message Error message.
	Message string `json:"message"`

	// Critical If criticial, this is a non-recoverable parse error.
	Critical int64 `json:"critical"`

	// Line Error line.
	Line int64 `json:"line"`

	// Column Error column.
	Column int64 `json:"column"`
}

// PageAppManifestParsedProperties (experimental) Parsed app manifest properties.
type PageAppManifestParsedProperties struct {
	// Scope Computed scope value
	Scope string `json:"scope"`
}

// PageLayoutViewport Layout viewport position and dimensions.
type PageLayoutViewport struct {
	// PageX Horizontal offset relative to the document (CSS pixels).
	PageX int64 `json:"pageX"`

	// PageY Vertical offset relative to the document (CSS pixels).
	PageY int64 `json:"pageY"`

	// ClientWidth Width (CSS pixels), excludes scrollbar if present.
	ClientWidth int64 `json:"clientWidth"`

	// ClientHeight Height (CSS pixels), excludes scrollbar if present.
	ClientHeight int64 `json:"clientHeight"`
}

// PageVisualViewport Visual viewport position, dimensions, and scale.
type PageVisualViewport struct {
	// OffsetX Horizontal offset relative to the layout viewport (CSS pixels).
	OffsetX float64 `json:"offsetX"`

	// OffsetY Vertical offset relative to the layout viewport (CSS pixels).
	OffsetY float64 `json:"offsetY"`

	// PageX Horizontal offset relative to the document (CSS pixels).
	PageX float64 `json:"pageX"`

	// PageY Vertical offset relative to the document (CSS pixels).
	PageY float64 `json:"pageY"`

	// ClientWidth Width (CSS pixels), excludes scrollbar if present.
	ClientWidth float64 `json:"clientWidth"`

	// ClientHeight Height (CSS pixels), excludes scrollbar if present.
	ClientHeight float64 `json:"clientHeight"`

	// Scale Scale relative to the ideal viewport (size at width=device-width).
	Scale float64 `json:"scale"`

	// Zoom Page zoom factor (CSS to device independent pixels ratio).
	Zoom float64 `json:"zoom,omitempty"`
}

// PageViewport Viewport for capturing screenshot.
type PageViewport struct {
	// X X offset in device independent pixels (dip).
	X float64 `json:"x"`

	// Y Y offset in device independent pixels (dip).
	Y float64 `json:"y"`

	// Width Rectangle width in device independent pixels (dip).
	Width float64 `json:"width"`

	// Height Rectangle height in device independent pixels (dip).
	Height float64 `json:"height"`

	// Scale Page scale factor.
	Scale float64 `json:"scale"`
}

// PageFontFamilies (experimental) Generic font families collection.
type PageFontFamilies struct {
	// Standard The standard font-family.
	Standard string `json:"standard,omitempty"`

	// Fixed The fixed font-family.
	Fixed string `json:"fixed,omitempty"`

	// Serif The serif font-family.
	Serif string `json:"serif,omitempty"`

	// SansSerif The sansSerif font-family.
	SansSerif string `json:"sansSerif,omitempty"`

	// Cursive The cursive font-family.
	Cursive string `json:"cursive,omitempty"`

	// Fantasy The fantasy font-family.
	Fantasy string `json:"fantasy,omitempty"`

	// Pictograph The pictograph font-family.
	Pictograph string `json:"pictograph,omitempty"`
}

// PageFontSizes (experimental) Default font sizes.
type PageFontSizes struct {
	// Standard Default standard font size.
	Standard int64 `json:"standard,omitempty"`

	// Fixed Default fixed font size.
	Fixed int64 `json:"fixed,omitempty"`
}

// PageClientNavigationReason (experimental) ...
type PageClientNavigationReason string

const (
	// PageClientNavigationReasonFormSubmissionGet enum value
	PageClientNavigationReasonFormSubmissionGet PageClientNavigationReason = "formSubmissionGet"

	// PageClientNavigationReasonFormSubmissionPost enum value
	PageClientNavigationReasonFormSubmissionPost PageClientNavigationReason = "formSubmissionPost"

	// PageClientNavigationReasonHTTPHeaderRefresh enum value
	PageClientNavigationReasonHTTPHeaderRefresh PageClientNavigationReason = "httpHeaderRefresh"

	// PageClientNavigationReasonScriptInitiated enum value
	PageClientNavigationReasonScriptInitiated PageClientNavigationReason = "scriptInitiated"

	// PageClientNavigationReasonMetaTagRefresh enum value
	PageClientNavigationReasonMetaTagRefresh PageClientNavigationReason = "metaTagRefresh"

	// PageClientNavigationReasonPageBlockInterstitial enum value
	PageClientNavigationReasonPageBlockInterstitial PageClientNavigationReason = "pageBlockInterstitial"

	// PageClientNavigationReasonReload enum value
	PageClientNavigationReasonReload PageClientNavigationReason = "reload"

	// PageClientNavigationReasonAnchorClick enum value
	PageClientNavigationReasonAnchorClick PageClientNavigationReason = "anchorClick"
)

// PageInstallabilityErrorArgument (experimental) ...
type PageInstallabilityErrorArgument struct {
	// Name Argument name (e.g. name:'minimum-icon-size-in-pixels').
	Name string `json:"name"`

	// Value Argument value (e.g. value:'64').
	Value string `json:"value"`
}

// PageInstallabilityError (experimental) The installability error
type PageInstallabilityError struct {
	// ErrorID The error id (e.g. 'manifest-missing-suitable-icon').
	ErrorID string `json:"errorId"`

	// ErrorArguments The list of error arguments (e.g. {name:'minimum-icon-size-in-pixels', value:'64'}).
	ErrorArguments []*PageInstallabilityErrorArgument `json:"errorArguments"`
}
