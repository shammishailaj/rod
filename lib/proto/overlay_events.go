// This file is generated by "./lib/proto/cmd/gen"

package proto

import "encoding/json"

// OverlayInspectNodeRequested Fired when the node should be inspected. This happens after call to `setInspectMode` or when
// user manually inspects an element.
type OverlayInspectNodeRequested struct {
	// BackendNodeID Id of the node to inspect.
	BackendNodeID *DOMBackendNodeID `json:"backendNodeId"`
}

// MethodName interface
func (evt OverlayInspectNodeRequested) MethodName() string {
	return "Overlay.inspectNodeRequested"
}

// Load json
func (evt OverlayInspectNodeRequested) Load(b []byte) *OverlayInspectNodeRequested {
	E(json.Unmarshal(b, &evt))
	return &evt
}

// OverlayNodeHighlightRequested Fired when the node should be highlighted. This happens after call to `setInspectMode`.
type OverlayNodeHighlightRequested struct {
	// NodeID ...
	NodeID *DOMNodeID `json:"nodeId"`
}

// MethodName interface
func (evt OverlayNodeHighlightRequested) MethodName() string {
	return "Overlay.nodeHighlightRequested"
}

// Load json
func (evt OverlayNodeHighlightRequested) Load(b []byte) *OverlayNodeHighlightRequested {
	E(json.Unmarshal(b, &evt))
	return &evt
}

// OverlayScreenshotRequested Fired when user asks to capture screenshot of some area on the page.
type OverlayScreenshotRequested struct {
	// Viewport Viewport to capture, in device independent pixels (dip).
	Viewport *PageViewport `json:"viewport"`
}

// MethodName interface
func (evt OverlayScreenshotRequested) MethodName() string {
	return "Overlay.screenshotRequested"
}

// Load json
func (evt OverlayScreenshotRequested) Load(b []byte) *OverlayScreenshotRequested {
	E(json.Unmarshal(b, &evt))
	return &evt
}

// OverlayInspectModeCanceled Fired when user cancels the inspect mode.
type OverlayInspectModeCanceled struct {
}

// MethodName interface
func (evt OverlayInspectModeCanceled) MethodName() string {
	return "Overlay.inspectModeCanceled"
}

// Load json
func (evt OverlayInspectModeCanceled) Load(b []byte) *OverlayInspectModeCanceled {
	E(json.Unmarshal(b, &evt))
	return &evt
}
