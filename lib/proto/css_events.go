// This file is generated by "./lib/proto/cmd/gen"

package proto

import "encoding/json"

// CSSFontsUpdated Fires whenever a web font is updated.  A non-empty font parameter indicates a successfully loaded
// web font
type CSSFontsUpdated struct {
	// Font The web font that has loaded.
	Font *CSSFontFace `json:"font,omitempty"`
}

// MethodName interface
func (evt CSSFontsUpdated) MethodName() string {
	return "CSS.fontsUpdated"
}

// Load json
func (evt CSSFontsUpdated) Load(b []byte) *CSSFontsUpdated {
	E(json.Unmarshal(b, &evt))
	return &evt
}

// CSSMediaQueryResultChanged Fires whenever a MediaQuery result changes (for example, after a browser window has been
// resized.) The current implementation considers only viewport-dependent media features.
type CSSMediaQueryResultChanged struct {
}

// MethodName interface
func (evt CSSMediaQueryResultChanged) MethodName() string {
	return "CSS.mediaQueryResultChanged"
}

// Load json
func (evt CSSMediaQueryResultChanged) Load(b []byte) *CSSMediaQueryResultChanged {
	E(json.Unmarshal(b, &evt))
	return &evt
}

// CSSStyleSheetAdded Fired whenever an active document stylesheet is added.
type CSSStyleSheetAdded struct {
	// Header Added stylesheet metainfo.
	Header *CSSCSSStyleSheetHeader `json:"header"`
}

// MethodName interface
func (evt CSSStyleSheetAdded) MethodName() string {
	return "CSS.styleSheetAdded"
}

// Load json
func (evt CSSStyleSheetAdded) Load(b []byte) *CSSStyleSheetAdded {
	E(json.Unmarshal(b, &evt))
	return &evt
}

// CSSStyleSheetChanged Fired whenever a stylesheet is changed as a result of the client operation.
type CSSStyleSheetChanged struct {
	// StyleSheetID ...
	StyleSheetID *CSSStyleSheetID `json:"styleSheetId"`
}

// MethodName interface
func (evt CSSStyleSheetChanged) MethodName() string {
	return "CSS.styleSheetChanged"
}

// Load json
func (evt CSSStyleSheetChanged) Load(b []byte) *CSSStyleSheetChanged {
	E(json.Unmarshal(b, &evt))
	return &evt
}

// CSSStyleSheetRemoved Fired whenever an active document stylesheet is removed.
type CSSStyleSheetRemoved struct {
	// StyleSheetID Identifier of the removed stylesheet.
	StyleSheetID *CSSStyleSheetID `json:"styleSheetId"`
}

// MethodName interface
func (evt CSSStyleSheetRemoved) MethodName() string {
	return "CSS.styleSheetRemoved"
}

// Load json
func (evt CSSStyleSheetRemoved) Load(b []byte) *CSSStyleSheetRemoved {
	E(json.Unmarshal(b, &evt))
	return &evt
}
