// This file is generated by "./lib/proto/cmd/gen"

package proto

import (
	"encoding/json"
)

// WebAudioEnable Enables the WebAudio domain and starts sending context lifetime events.
type WebAudioEnable struct {
}

// WebAudioEnableResult type
type WebAudioEnableResult struct {
}

// Call of the command, sessionID is optional.
func (m WebAudioEnable) Call(c *Call) (*WebAudioEnableResult, error) {
	bin, err := c.Client.Call(c.Context, c.SessionID, "WebAudioEnable", m)
	if err != nil {
		return nil, err
	}

	var res WebAudioEnableResult
	err = json.Unmarshal(bin, &res)
	if err != nil {
		return nil, err
	}

	return &res, nil
}

// WebAudioDisable Disables the WebAudio domain.
type WebAudioDisable struct {
}

// WebAudioDisableResult type
type WebAudioDisableResult struct {
}

// Call of the command, sessionID is optional.
func (m WebAudioDisable) Call(c *Call) (*WebAudioDisableResult, error) {
	bin, err := c.Client.Call(c.Context, c.SessionID, "WebAudioDisable", m)
	if err != nil {
		return nil, err
	}

	var res WebAudioDisableResult
	err = json.Unmarshal(bin, &res)
	if err != nil {
		return nil, err
	}

	return &res, nil
}

// WebAudioGetRealtimeData Fetch the realtime data from the registered contexts.
type WebAudioGetRealtimeData struct {
	// ContextID ...
	ContextID *WebAudioGraphObjectID `json:"contextId"`
}

// WebAudioGetRealtimeDataResult type
type WebAudioGetRealtimeDataResult struct {
	// RealtimeData ...
	RealtimeData *WebAudioContextRealtimeData `json:"realtimeData"`
}

// Call of the command, sessionID is optional.
func (m WebAudioGetRealtimeData) Call(c *Call) (*WebAudioGetRealtimeDataResult, error) {
	bin, err := c.Client.Call(c.Context, c.SessionID, "WebAudioGetRealtimeData", m)
	if err != nil {
		return nil, err
	}

	var res WebAudioGetRealtimeDataResult
	err = json.Unmarshal(bin, &res)
	if err != nil {
		return nil, err
	}

	return &res, nil
}
