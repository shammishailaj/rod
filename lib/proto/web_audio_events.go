// This file is generated by "./lib/proto/cmd/gen"

package proto

import "encoding/json"

// WebAudioContextCreated Notifies that a new BaseAudioContext has been created.
type WebAudioContextCreated struct {
	// Context ...
	Context *WebAudioBaseAudioContext `json:"context"`
}

// MethodName interface
func (evt WebAudioContextCreated) MethodName() string {
	return "WebAudio.contextCreated"
}

// Load json
func (evt WebAudioContextCreated) Load(b []byte) *WebAudioContextCreated {
	E(json.Unmarshal(b, &evt))
	return &evt
}

// WebAudioContextWillBeDestroyed Notifies that an existing BaseAudioContext will be destroyed.
type WebAudioContextWillBeDestroyed struct {
	// ContextID ...
	ContextID *WebAudioGraphObjectID `json:"contextId"`
}

// MethodName interface
func (evt WebAudioContextWillBeDestroyed) MethodName() string {
	return "WebAudio.contextWillBeDestroyed"
}

// Load json
func (evt WebAudioContextWillBeDestroyed) Load(b []byte) *WebAudioContextWillBeDestroyed {
	E(json.Unmarshal(b, &evt))
	return &evt
}

// WebAudioContextChanged Notifies that existing BaseAudioContext has changed some properties (id stays the same)..
type WebAudioContextChanged struct {
	// Context ...
	Context *WebAudioBaseAudioContext `json:"context"`
}

// MethodName interface
func (evt WebAudioContextChanged) MethodName() string {
	return "WebAudio.contextChanged"
}

// Load json
func (evt WebAudioContextChanged) Load(b []byte) *WebAudioContextChanged {
	E(json.Unmarshal(b, &evt))
	return &evt
}

// WebAudioAudioListenerCreated Notifies that the construction of an AudioListener has finished.
type WebAudioAudioListenerCreated struct {
	// Listener ...
	Listener *WebAudioAudioListener `json:"listener"`
}

// MethodName interface
func (evt WebAudioAudioListenerCreated) MethodName() string {
	return "WebAudio.audioListenerCreated"
}

// Load json
func (evt WebAudioAudioListenerCreated) Load(b []byte) *WebAudioAudioListenerCreated {
	E(json.Unmarshal(b, &evt))
	return &evt
}

// WebAudioAudioListenerWillBeDestroyed Notifies that a new AudioListener has been created.
type WebAudioAudioListenerWillBeDestroyed struct {
	// ContextID ...
	ContextID *WebAudioGraphObjectID `json:"contextId"`

	// ListenerID ...
	ListenerID *WebAudioGraphObjectID `json:"listenerId"`
}

// MethodName interface
func (evt WebAudioAudioListenerWillBeDestroyed) MethodName() string {
	return "WebAudio.audioListenerWillBeDestroyed"
}

// Load json
func (evt WebAudioAudioListenerWillBeDestroyed) Load(b []byte) *WebAudioAudioListenerWillBeDestroyed {
	E(json.Unmarshal(b, &evt))
	return &evt
}

// WebAudioAudioNodeCreated Notifies that a new AudioNode has been created.
type WebAudioAudioNodeCreated struct {
	// Node ...
	Node *WebAudioAudioNode `json:"node"`
}

// MethodName interface
func (evt WebAudioAudioNodeCreated) MethodName() string {
	return "WebAudio.audioNodeCreated"
}

// Load json
func (evt WebAudioAudioNodeCreated) Load(b []byte) *WebAudioAudioNodeCreated {
	E(json.Unmarshal(b, &evt))
	return &evt
}

// WebAudioAudioNodeWillBeDestroyed Notifies that an existing AudioNode has been destroyed.
type WebAudioAudioNodeWillBeDestroyed struct {
	// ContextID ...
	ContextID *WebAudioGraphObjectID `json:"contextId"`

	// NodeID ...
	NodeID *WebAudioGraphObjectID `json:"nodeId"`
}

// MethodName interface
func (evt WebAudioAudioNodeWillBeDestroyed) MethodName() string {
	return "WebAudio.audioNodeWillBeDestroyed"
}

// Load json
func (evt WebAudioAudioNodeWillBeDestroyed) Load(b []byte) *WebAudioAudioNodeWillBeDestroyed {
	E(json.Unmarshal(b, &evt))
	return &evt
}

// WebAudioAudioParamCreated Notifies that a new AudioParam has been created.
type WebAudioAudioParamCreated struct {
	// Param ...
	Param *WebAudioAudioParam `json:"param"`
}

// MethodName interface
func (evt WebAudioAudioParamCreated) MethodName() string {
	return "WebAudio.audioParamCreated"
}

// Load json
func (evt WebAudioAudioParamCreated) Load(b []byte) *WebAudioAudioParamCreated {
	E(json.Unmarshal(b, &evt))
	return &evt
}

// WebAudioAudioParamWillBeDestroyed Notifies that an existing AudioParam has been destroyed.
type WebAudioAudioParamWillBeDestroyed struct {
	// ContextID ...
	ContextID *WebAudioGraphObjectID `json:"contextId"`

	// NodeID ...
	NodeID *WebAudioGraphObjectID `json:"nodeId"`

	// ParamID ...
	ParamID *WebAudioGraphObjectID `json:"paramId"`
}

// MethodName interface
func (evt WebAudioAudioParamWillBeDestroyed) MethodName() string {
	return "WebAudio.audioParamWillBeDestroyed"
}

// Load json
func (evt WebAudioAudioParamWillBeDestroyed) Load(b []byte) *WebAudioAudioParamWillBeDestroyed {
	E(json.Unmarshal(b, &evt))
	return &evt
}

// WebAudioNodesConnected Notifies that two AudioNodes are connected.
type WebAudioNodesConnected struct {
	// ContextID ...
	ContextID *WebAudioGraphObjectID `json:"contextId"`

	// SourceID ...
	SourceID *WebAudioGraphObjectID `json:"sourceId"`

	// DestinationID ...
	DestinationID *WebAudioGraphObjectID `json:"destinationId"`

	// SourceOutputIndex ...
	SourceOutputIndex float64 `json:"sourceOutputIndex,omitempty"`

	// DestinationInputIndex ...
	DestinationInputIndex float64 `json:"destinationInputIndex,omitempty"`
}

// MethodName interface
func (evt WebAudioNodesConnected) MethodName() string {
	return "WebAudio.nodesConnected"
}

// Load json
func (evt WebAudioNodesConnected) Load(b []byte) *WebAudioNodesConnected {
	E(json.Unmarshal(b, &evt))
	return &evt
}

// WebAudioNodesDisconnected Notifies that AudioNodes are disconnected. The destination can be null, and it means all the outgoing connections from the source are disconnected.
type WebAudioNodesDisconnected struct {
	// ContextID ...
	ContextID *WebAudioGraphObjectID `json:"contextId"`

	// SourceID ...
	SourceID *WebAudioGraphObjectID `json:"sourceId"`

	// DestinationID ...
	DestinationID *WebAudioGraphObjectID `json:"destinationId"`

	// SourceOutputIndex ...
	SourceOutputIndex float64 `json:"sourceOutputIndex,omitempty"`

	// DestinationInputIndex ...
	DestinationInputIndex float64 `json:"destinationInputIndex,omitempty"`
}

// MethodName interface
func (evt WebAudioNodesDisconnected) MethodName() string {
	return "WebAudio.nodesDisconnected"
}

// Load json
func (evt WebAudioNodesDisconnected) Load(b []byte) *WebAudioNodesDisconnected {
	E(json.Unmarshal(b, &evt))
	return &evt
}

// WebAudioNodeParamConnected Notifies that an AudioNode is connected to an AudioParam.
type WebAudioNodeParamConnected struct {
	// ContextID ...
	ContextID *WebAudioGraphObjectID `json:"contextId"`

	// SourceID ...
	SourceID *WebAudioGraphObjectID `json:"sourceId"`

	// DestinationID ...
	DestinationID *WebAudioGraphObjectID `json:"destinationId"`

	// SourceOutputIndex ...
	SourceOutputIndex float64 `json:"sourceOutputIndex,omitempty"`
}

// MethodName interface
func (evt WebAudioNodeParamConnected) MethodName() string {
	return "WebAudio.nodeParamConnected"
}

// Load json
func (evt WebAudioNodeParamConnected) Load(b []byte) *WebAudioNodeParamConnected {
	E(json.Unmarshal(b, &evt))
	return &evt
}

// WebAudioNodeParamDisconnected Notifies that an AudioNode is disconnected to an AudioParam.
type WebAudioNodeParamDisconnected struct {
	// ContextID ...
	ContextID *WebAudioGraphObjectID `json:"contextId"`

	// SourceID ...
	SourceID *WebAudioGraphObjectID `json:"sourceId"`

	// DestinationID ...
	DestinationID *WebAudioGraphObjectID `json:"destinationId"`

	// SourceOutputIndex ...
	SourceOutputIndex float64 `json:"sourceOutputIndex,omitempty"`
}

// MethodName interface
func (evt WebAudioNodeParamDisconnected) MethodName() string {
	return "WebAudio.nodeParamDisconnected"
}

// Load json
func (evt WebAudioNodeParamDisconnected) Load(b []byte) *WebAudioNodeParamDisconnected {
	E(json.Unmarshal(b, &evt))
	return &evt
}
